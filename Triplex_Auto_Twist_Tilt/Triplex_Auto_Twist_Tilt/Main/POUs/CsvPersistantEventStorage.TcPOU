<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.5">
  <POU Name="CsvPersistantEventStorage" Id="{7a2e0c5f-3324-46b7-9ddf-65afa5ad1eb1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CsvPersistantEventStorage IMPLEMENTS I_PersistentEventStorage
VAR
	fbFileOpen : FB_FileOpen := (sPathName := 'C:\Events.log', nMode := FOPEN_MODEAPPEND OR FOPEN_MODETEXT);
	fbFilePuts : FB_FilePuts;
	fbFileClose : FB_FileClose;
	eWriteState : (FILE_OPEN_TRIGGER,FILE_OPEN, WAIT_FOR_EVENT,WRITE_EVENT_TRIGGER, WRITE_EVENT, FILE_CLOSE_TRIGGER, FILE_CLOSE, ERROR);
	stEventWrittenToFile : ST_Event;
	CsvString: T_MaxString;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eWriteState OF
	FILE_OPEN_TRIGGER :
		fbFileOpen(bExecute := TRUE);
		
	FILE_OPEN :
		fbFileOpen(bExecute := FALSE);
		IF fbFileOpen.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFileOpen.bBusy AND fbFileOpen.hFile <> 0 THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
		
	WAIT_FOR_EVENT : 
		// Do nothing
		
	WRITE_EVENT_TRIGGER : 
		CsvString := CreateCsvString(stEvent := stEventWrittenToFile);
		fbFilePuts(bExecute := TRUE,
			sLine := CsvString,
			hFile := fbFileOpen.hFile);
		eWriteState := WRITE_EVENT;
		
	WRITE_EVENT :
		fbFilePuts(bExecute := FALSE);
		IF fbFilePuts.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fbFilePuts.bBusy THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
		
	FILE_CLOSE_TRIGGER :
		fbFileClose(bExecute := TRUE,
			hFile := fbFileOpen.hFile);
		eWriteState := ERROR;
		
	FILE_CLOSE : 
		fbFileClose(bExecute := FALSE);
		IF fbFileClose.bError THEN
			eWriteState := ERROR;
		ELSIF fbFileClose.bBusy THEN
			eWriteState := FILE_OPEN_TRIGGER;
		END_IF
		
	ERROR:
		//Do nothing
END_CASE]]></ST>
    </Implementation>
    <Method Name="CreateCsvString" Id="{e4742ac6-a8a0-4928-893e-0c7a58fa8969}">
      <Declaration><![CDATA[METHOD PRIVATE CreateCsvString : T_MaxString
VAR_INPUT
	stEvent : REFERENCE TO ST_Event;
END_VAR
VAR
	TempString : T_MaxString;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TempString := TO_STRING(stEvent.eEventType);
TempString := CONCAT (STR1 := TempString, STR2 := ',');
TempString := CONCAT (STR1 := TempString, STR2 := TO_STRING(stEvent.eEventSeverity));
TempString := CONCAT (STR1 := TempString, STR2 := ',');
TempString := CONCAT (STR1 := TempString, STR2 := TO_STRING(stEvent.nEventIdentity));
TempString := CONCAT (STR1 := TempString, STR2 := ',');
TempString := CONCAT (STR1 := TempString, stEvent.sEventText);
TempString := CONCAT (STR1 := TempString, STR2 := ',');
TempString := CONCAT (STR1 := TempString, STR2 := TO_STRING (stEvent.dtTimestamp));
TempString := CONCAT (STR1 := TempString, STR2 := '$n'); // NewLine

CreateCsvString := TempString;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StoreEvent" Id="{630aae18-3f10-4750-a143-840eb3d056fe}">
      <Declaration><![CDATA[{warning 'add method implementation '}
METHOD StoreEvent
VAR_INPUT
	stEvent	: ST_Event;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eWriteState = WAIT_FOR_EVENT THEN
	eWriteState := WRITE_EVENT;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="CsvPersistantEventStorage">
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="3" />
      <LineId Id="29" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="46" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="51" Count="1" />
      <LineId Id="55" Count="2" />
      <LineId Id="53" Count="1" />
      <LineId Id="59" Count="1" />
      <LineId Id="63" Count="1" />
      <LineId Id="61" Count="1" />
      <LineId Id="27" Count="1" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="CsvPersistantEventStorage.CreateCsvString">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="12" Count="6" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="CsvPersistantEventStorage.StoreEvent">
      <LineId Id="7" Count="2" />
    </LineIds>
  </POU>
</TcPlcObject>